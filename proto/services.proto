syntax = "proto3";
import "types.proto";

service BLSSigning {

    // generate key-pairs either as bytes or hex string based on the request
    rpc GenerateKeypairRaw (bls_proto.GenerateKeypairRequestRaw) returns(bls_proto.GenerateKeypairResponseRaw);
    rpc GenerateKeypairHex (bls_proto.GenerateKeypairRequestHex) returns(bls_proto.GenerateKeypairResponseHex);

    // return the signature given the private key identifier
    rpc SignRaw (bls_proto.SignRequestRaw) returns(bls_proto.SignResponseRaw);
    rpc SignHex (bls_proto.SignRequestHex) returns(bls_proto.SignResponseHex);

    // verifies the signature given the public key and message
    rpc VerifyRaw (bls_proto.VerifyRequestRaw) returns(bls_proto.VerifyResponse);
    rpc VerifyHex (bls_proto.VerifyRequestHex) returns(bls_proto.VerifyResponse);

    // returns the aggregated signature generated by combining all the given signatures
    rpc AggregateRaw (bls_proto.AggregateRequestRaw) returns(bls_proto.AggregateResponseRaw);
    rpc AggregateHex (bls_proto.AggregateRequestHex) returns(bls_proto.AggregateResponseHex);

    // verifies the aggregated signature from the messages and public keys given
    rpc VerifyAggregatedRaw (bls_proto.VerifyAggregateRequestRaw) returns (bls_proto.VerifyAggregateResponse);
    rpc VerifyAggregatedHex (bls_proto.VerifyAggregateRequestHex) returns (bls_proto.VerifyAggregateResponse);
}
